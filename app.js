// Generated by CoffeeScript 1.12.7
(function() {
  var TelegramBot, bot, currentBingos, fs, processCommand, processText, savedBingos, token;

  TelegramBot = require('node-telegram-bot-api');

  fs = require('fs');

  console.log('Coffee is started! Yay!');

  token = fs.readFileSync('token.txt', 'utf8');

  if (!token) {
    console.log('Please provide token.txt file');
    return;
  }

  bot = new TelegramBot(token, {
    polling: true
  });

  console.log('Started');

  savedBingos = fs.readFileSync('bingos.json', 'utf8');

  currentBingos = savedBingos && JSON.parse(savedBingos || {});

  console.log("current Bingos: " + currentBingos);

  bot.on('message', function(msg) {
    var text;
    if (!msg.text) {
      return;
    }
    text = msg.text;
    if (text.match(/\/create_bingo (\w+) (\w+)( \w+)*/)) {
      return processCommand(msg);
    } else if (!text.startsWith('/')) {
      return processText(msg);
    } else {
      return console.log("Unknown command: " + text);
    }
  });

  processCommand = function(msg) {
    var bingoName, chatId, split;
    chatId = msg.chat.id;
    split = msg.text.split(' ');
    bingoName = split[1];
    if (currentBingos[bingoName]) {
      bot.sendMessage(chatId, 'Sorry, cannot create bingo with existing name. Please provide different name');
      return;
    }
    currentBingos[bingoName] = split.slice(2);
    bot.sendMessage(chatId, "New Bingo (" + bingoName + ") Added!");
    return console.log(currentBingos);
  };

  processText = function(msg) {
    var chatId, i, key, len, results, strings, word;
    chatId = msg.chat.id;
    strings = msg.text.split(' ');
    for (i = 0, len = strings.length; i < len; i++) {
      word = strings[i];
      for (key in currentBingos) {
        currentBingos[key] = currentBingos[key].filter(function(val) {
          return val.toLowerCase() !== word.toLowerCase();
        });
      }
    }
    results = [];
    for (key in currentBingos) {
      if (currentBingos[key].length === 0) {
        bot.sendMessage(chatId, "Bingo for " + key + "!!! You're the lucky one!");
        results.push(delete currentBingos[key]);
      } else {
        results.push(void 0);
      }
    }
    return results;
  };

  setInterval((function() {
    return fs.writeFile('bingos.json', JSON.stringify(currentBingos), 'utf8', (function(_this) {
      return function() {
        return {};
      };
    })(this));
  }), 1000);

}).call(this);
